#!/usr/bin/env python

# This file implements the hosting solution, which just starts TensorFlow Model Serving.

from __future__ import print_function

import subprocess


def start_server():
    print('Starting TensorFlow Serving.')

    # link the log streams to stdout/err so they will be logged to the container logs
    subprocess.check_call(['ln', '-sf', '/dev/stdout', '/var/log/nginx/access.log'])
    subprocess.check_call(['ln', '-sf', '/dev/stderr', '/var/log/nginx/error.log'])

    nginx = subprocess.Popen(['nginx', '-c', '/opt/ml/code/nginx.conf'])
    tf_model_server = subprocess.call(['tensorflow_model_server',
                                       '--rest_api_port=8501',
                                       '--model_name=cifar10_model',
                                       '--model_base_path=/opt/ml/model/export/Servo'])


# The main routine just invokes the start function.
if __name__ == '__main__':
    start_server()
